{"version":3,"file":"static/js/927.50d66535.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IAEZ,OAAOV,EADO,UAAMF,EAAN,qCAA2CC,IAItD,SAASY,EAAkBC,GAE9B,OAAOZ,EADQ,UAAMF,EAAN,iCAAuCC,EAAvC,kBAAoDa,EAApD,YAIZ,SAASC,EAAeC,GAE3B,OAAOd,EADY,UAAMF,EAAN,kBAAwBgB,EAAxB,oBAA2Cf,IAI3D,SAASgB,EAAmBD,GAE/B,OAAOd,EADgB,UAAMF,EAAN,kBAAwBgB,EAAxB,4BAAmDf,IAIvE,SAASiB,EAAqBF,GAEjC,OAAOd,EADkB,UAAMF,EAAN,kBAAwBgB,EAAxB,4BAAmDf,M,iIC7BnEkB,EAAUC,EAAAA,EAAAA,IAAH,+DAKPC,EAAOD,EAAAA,EAAAA,IAAH,8CAIJE,EAAaF,EAAAA,EAAAA,IAAH,oH,kBCNjBG,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,gCAClBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,gCAEZ,SAASE,IACpB,IAAQV,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA0BY,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAwBlB,GAASmB,KAAKL,KACvC,CAACd,KAGA,iCACI,mBACEoB,KAAK,SACLC,QAAS,WAAON,GAAU,IAF5B,sBAMEF,IAAS,uCACVA,IACG,iCACI,UAACV,EAAD,YACI,0BACI,gBAAKmB,IAAG,0CAAqCT,EAAMU,aAC/CC,IAAKX,EAAMY,MACXC,MAAO,SAGf,UAACrB,EAAD,YACI,0BAAKQ,EAAMY,MAAX,KAAoBZ,EAAMc,aAAaC,MAAM,EAAG,GAAhD,QACA,wCAAgBf,EAAMgB,iBACtB,sCACA,uBAAIhB,EAAMiB,YACV,mCACKjB,EAAMkB,OACFC,KAAI,SAAAC,GAAK,OAAI,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAME,cAI/C,UAAC7B,EAAD,YACI,mDACA,2BACI,yBACI,SAAC,KAAD,CAAM8B,GAAG,OAAT,qBAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIZ,SAAC,KAAD,QAGR,SAAC,EAAAC,SAAD,CAAUC,UAAU,uCAApB,UACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAQC,KAAK,OAAOC,SAAS,SAACjC,EAAD,OAC7B,SAAC,KAAD,CAAQgC,KAAK,UAAUC,SAAS,SAAC/B,EAAD","sources":["services/movieAPI.js","views/MovieDetailsPage.styled.js","views/MovieDetailsPage.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst key = '276ded1fd3f5024715e6a06fff45ae5d';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n    const trendURL = `${BASE_URL}/trending/all/day?api_key=${key}`;\n    return fetchWithErrorHandling(trendURL);\n}\n\nexport function fetchSearchMovies(query) {\n    const searchURL = `${BASE_URL}/search/movie?api_key=${key}&query=${query}&page=1`;\n    return fetchWithErrorHandling(searchURL);\n}\n\nexport function fetchMovieById(movieId) {\n    const searchByIdURL = `${BASE_URL}/movie/${movieId}?api_key=${key}`;\n    return fetchWithErrorHandling(searchByIdURL);    \n}\n\nexport function fetchMovieCastById(movieId) {\n    const searchCastByIdURL = `${BASE_URL}/movie/${movieId}/credits?api_key=${key}`;\n    return fetchWithErrorHandling(searchCastByIdURL);    \n}\n\nexport function fetchMovieReviewById(movieId) {\n    const searchReviewByIdURL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${key}`;    \n    return fetchWithErrorHandling(searchReviewByIdURL);    \n}","import styled from '@emotion/styled';\n\nexport const Section = styled.div`\n  margin-top: 10px;\n  display: flex;\n`;\n\nexport const Info = styled.div`\n  margin-left: 15px;\n`;\n\nexport const Additional = styled.div`\npadding-left: 15px;\n  border-bottom: 1px solid #2a363b;\n  border-top: 1px solid #2a363b;\n`;","import { useState, useEffect, Suspense, lazy } from 'react';\nimport { useParams, Link, Outlet, Routes, Route, useNavigate} from 'react-router-dom';\nimport { Section, Info, Additional } from './MovieDetailsPage.styled';\nimport * as movieAPI from '../services/movieAPI';\n\nconst Cast = lazy(() => import('../views/Cast'));\nconst Reviews = lazy(() => import('../views/Reviews'));\n\nexport default function MovieDetailsPage() {\n    const { movieId } = useParams();    \n    const [movie, setMovie] = useState(null);    \n    const navigate = useNavigate();\n        \n    useEffect(() => {\n        movieAPI.fetchMovieById(movieId).then(setMovie);        \n    }, [movieId]);  \n\n    return (\n        <>\n            <button\n              type=\"button\"\n              onClick={() => {navigate(-1)}}\n            >\n              Go back\n            </button> \n            {!movie && <h2>Loading...</h2>}\n            {movie && (\n                <>\n                    <Section>\n                        <div>\n                            <img src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                                alt={movie.title}\n                                width={300}\n                            />\n                        </div>\n                        <Info>\n                            <h2>{movie.title} ({movie.release_date.slice(0, 4)})</h2>\n                            <p>User Score: {movie.vote_average}</p>\n                            <h3>Overview</h3>\n                            <p>{movie.overview}</p>\n                            <h3>Genres</h3>                \n                                {movie.genres\n                                    .map(genre => <span key={genre.id}>{genre.name} </span>)\n                                }\n                        </Info>\n                    </Section>\n                    <Additional>\n                        <p>Additional information</p>\n                        <ul>\n                            <li>                                \n                                <Link to=\"cast\">Cast</Link>\n                            </li> \n                            <li>                                \n                                <Link to=\"reviews\">Reviews</Link>\n                            </li> \n                        </ul>\n                    </Additional>          \n                    <Outlet />\n                </>\n            )} \n            <Suspense fallback={<h2>Loading...</h2>}>\n                <Routes> \n                    <Route  path=\"cast\" element={<Cast />} /> \n                    <Route  path=\"reviews\" element={<Reviews />} />            \n                </Routes>\n            </Suspense>\n        </>\n    );\n};"],"names":["BASE_URL","key","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovies","query","fetchMovieById","movieId","fetchMovieCastById","fetchMovieReviewById","Section","styled","Info","Additional","Cast","lazy","Reviews","MovieDetailsPage","useParams","useState","movie","setMovie","navigate","useNavigate","useEffect","movieAPI","then","type","onClick","src","poster_path","alt","title","width","release_date","slice","vote_average","overview","genres","map","genre","name","id","to","Suspense","fallback","path","element"],"sourceRoot":""}