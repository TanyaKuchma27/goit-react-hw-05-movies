{"version":3,"file":"static/js/489.13aa7037.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IAEZ,OAAOV,EADO,UAAMF,EAAN,qCAA2CC,IAItD,SAASY,EAAkBC,GAE9B,OAAOZ,EADQ,UAAMF,EAAN,iCAAuCC,EAAvC,kBAAoDa,EAApD,YAIZ,SAASC,EAAeC,GAE3B,OAAOd,EADY,UAAMF,EAAN,kBAAwBgB,EAAxB,oBAA2Cf,IAI3D,SAASgB,EAAmBD,GAE/B,OAAOd,EADgB,UAAMF,EAAN,kBAAwBgB,EAAxB,4BAAmDf,IAIvE,SAASiB,EAAqBF,GAEjC,OAAOd,EADkB,UAAMF,EAAN,kBAAwBgB,EAAxB,4BAAmDf,M,kHC3BjE,SAASkB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA+BC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,WAASF,KAAKH,KAExD,KAID,iCACE,2CACCD,IACC,wBAEGA,EAAOO,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,OAASH,EAAMI,iBADhDJ,EAAME","sources":["services/movieAPI.js","views/HomePage.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst key = '276ded1fd3f5024715e6a06fff45ae5d';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n    const trendURL = `${BASE_URL}/trending/all/day?api_key=${key}`;\n    return fetchWithErrorHandling(trendURL);\n}\n\nexport function fetchSearchMovies(query) {\n    const searchURL = `${BASE_URL}/search/movie?api_key=${key}&query=${query}&page=1`;\n    return fetchWithErrorHandling(searchURL);\n}\n\nexport function fetchMovieById(movieId) {\n    const searchByIdURL = `${BASE_URL}/movie/${movieId}?api_key=${key}`;\n    return fetchWithErrorHandling(searchByIdURL);    \n}\n\nexport function fetchMovieCastById(movieId) {\n    const searchCastByIdURL = `${BASE_URL}/movie/${movieId}/credits?api_key=${key}`;\n    return fetchWithErrorHandling(searchCastByIdURL);    \n}\n\nexport function fetchMovieReviewById(movieId) {\n    const searchReviewByIdURL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${key}`;    \n    return fetchWithErrorHandling(searchReviewByIdURL);    \n}","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    movieAPI.fetchTrendingMovies().then(r => r.results).then(setMovies);\n  \n  }, []);\n  \n\n  return (    \n    <> \n      <h1>Trending today</h1>         \n      {movies && (\n        <ul>\n          \n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title || movie.original_name}</Link>\n            </li>\n          ))}\n        </ul>\n      )} \n    </>\n  );\n}"],"names":["BASE_URL","key","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovies","query","fetchMovieById","movieId","fetchMovieCastById","fetchMovieReviewById","HomePage","useState","movies","setMovies","useEffect","movieAPI","then","r","results","map","movie","to","id","title","original_name"],"sourceRoot":""}